"use strict";
self["webpackHotUpdatetailwind_demo"]("components-Button-Button-stories",{

/***/ "./src/components/Button/Button.mdx":
/*!******************************************!*\
  !*** ./src/components/Button/Button.mdx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ MDXContent)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");
/* harmony import */ var _Users_saransh_seth_Desktop_Tailwind_Demo_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim */ "./node_modules/@mdx-js/react/lib/index.js");





function _createMdxContent(props) {
  const _components = {
    code: "code",
    h1: "h1",
    h2: "h2",
    h3: "h3",
    li: "li",
    p: "p",
    strong: "strong",
    ul: "ul",
    ...(0,_Users_saransh_seth_Desktop_Tailwind_Demo_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_2__.useMDXComponents)(),
    ...props.components
  };
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h1, {
      id: "button-component",
      children: "Button Component"
    }), "\n", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {
      children: ["The ", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {
        children: "Button"
      }), " component is a flexible and customizable button component supporting various styles, sizes, and states. It is designed to be accessible and responsive."]
    }), "\n", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {
      id: "props",
      children: "Props"
    }), "\n", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {
      children: ["\n", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {
          children: "variant"
        }), " (String): Specifies the style variant of the button. Options are ", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {
          children: "primary"
        }), ", ", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {
          children: "secondary"
        }), ", ", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {
          children: "special"
        }), ", ", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {
          children: "unboxed"
        }), ", ", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {
          children: "inverse"
        }), ", ", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {
          children: "disabled"
        }), "."]
      }), "\n", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {
          children: "size"
        }), " (String): Specifies the size of the button. Options are ", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {
          children: "xs"
        }), ", ", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {
          children: "sm"
        }), ", ", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {
          children: "md"
        }), ", ", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {
          children: "lg"
        }), ", ", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {
          children: "xl"
        }), "."]
      }), "\n", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {
          children: "isBlock"
        }), " (Boolean): If true, the button will be displayed as a block element (full width)."]
      }), "\n", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {
          children: "isRound"
        }), " (Boolean): If true, the button will have fully rounded corners."]
      }), "\n", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {
          children: "isDisabled"
        }), " (Boolean): If true, the button will be disabled."]
      }), "\n"]
    }), "\n", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {
      id: "example-usage",
      children: "Example Usage"
    }), "\n", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {
      children: ["Use the ", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {
        children: "Button"
      }), " component to create interactive buttons in your application. You can customize the ", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {
        children: "variant"
      }), ", ", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {
        children: "size"
      }), ", ", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {
        children: "isBlock"
      }), ", ", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {
        children: "isRound"
      }), ", and ", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {
        children: "isDisabled"
      }), " properties to suit your needs."]
    }), "\n", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {
      id: "props-table",
      children: "Props Table"
    }), "\n", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {
      children: ["| Prop Name   | Type    | Default  | Description                                                                 |\n|-------------|---------|----------|-----------------------------------------------------------------------------|\n| variant     | String  | primary  | Specifies the style variant of the button. Options are ", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {
        children: "primary"
      }), ", ", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {
        children: "secondary"
      }), ", ", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {
        children: "special"
      }), ", ", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {
        children: "unboxed"
      }), ", ", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {
        children: "inverse"
      }), ", ", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {
        children: "disabled"
      }), ". |\n| size        | String  | md       | Specifies the size of the button. Options are ", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {
        children: "xs"
      }), ", ", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {
        children: "sm"
      }), ", ", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {
        children: "md"
      }), ", ", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {
        children: "lg"
      }), ", ", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {
        children: "xl"
      }), ". |\n| isBlock     | Boolean | false    | If true, the button will be displayed as a block element (full width).      |\n| isRound     | Boolean | false    | If true, the button will have fully rounded corners.                        |\n| isDisabled  | Boolean | false    | If true, the button will be disabled.                                       |"]
    }), "\n", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {
      id: "customization",
      children: "Customization"
    }), "\n", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul, {
      children: ["\n", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {
          children: "Styling"
        }), ": Customize the appearance using TailwindCSS utility classes."]
      }), "\n", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li, {
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {
          children: "Accessibility"
        }), ": The component includes keyboard navigation and ARIA attributes to enhance accessibility."]
      }), "\n"]
    }), "\n", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {
      id: "variants",
      children: "Variants"
    }), "\n", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {
      id: "primary",
      children: "Primary"
    }), "\n", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {
      children: "The primary variant provides a standard button with a primary color."
    }), "\n", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {
      id: "secondary",
      children: "Secondary"
    }), "\n", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {
      children: "The secondary variant provides a button with a secondary color and border."
    }), "\n", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {
      id: "special",
      children: "Special"
    }), "\n", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {
      children: "The special variant provides a button with a distinctive color to highlight special actions."
    }), "\n", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {
      id: "unboxed",
      children: "Unboxed"
    }), "\n", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {
      children: "The unboxed variant provides a transparent button without borders."
    }), "\n", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {
      id: "inverse",
      children: "Inverse"
    }), "\n", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {
      children: "The inverse variant provides a button with inverted colors, suitable for dark backgrounds."
    }), "\n", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3, {
      id: "disabled",
      children: "Disabled"
    }), "\n", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {
      children: "The disabled variant provides a non-interactive button."
    }), "\n", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2, {
      id: "sizes",
      children: "Sizes"
    }), "\n", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {
      children: ["The button component supports multiple sizes: ", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {
        children: "xs"
      }), ", ", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {
        children: "sm"
      }), ", ", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {
        children: "md"
      }), ", ", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {
        children: "lg"
      }), ", ", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {
        children: "xl"
      }), "."]
    })]
  });
}
function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = {
    ...(0,_Users_saransh_seth_Desktop_Tailwind_Demo_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_2__.useMDXComponents)(),
    ...props.components
  };
  return MDXLayout ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout, {
    ...props,
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent, {
      ...props
    })
  }) : _createMdxContent(props);
}


/***/ }),

/***/ "./src/components/Button/Button.stories.js":
/*!*************************************************!*\
  !*** ./src/components/Button/Button.stories.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Block: () => (/* binding */ Block),
/* harmony export */   Disabled: () => (/* binding */ Disabled),
/* harmony export */   ExtraLarge: () => (/* binding */ ExtraLarge),
/* harmony export */   ExtraSmall: () => (/* binding */ ExtraSmall),
/* harmony export */   Inverse: () => (/* binding */ Inverse),
/* harmony export */   Large: () => (/* binding */ Large),
/* harmony export */   Medium: () => (/* binding */ Medium),
/* harmony export */   Primary: () => (/* binding */ Primary),
/* harmony export */   Rounded: () => (/* binding */ Rounded),
/* harmony export */   Secondary: () => (/* binding */ Secondary),
/* harmony export */   Small: () => (/* binding */ Small),
/* harmony export */   Special: () => (/* binding */ Special),
/* harmony export */   Unboxed: () => (/* binding */ Unboxed),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Button_Button_vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Button/Button.vue */ "./src/components/Button/Button.vue");
/* harmony import */ var _Button_mdx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Button.mdx */ "./src/components/Button/Button.mdx");


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  title: 'Components/Button',
  component: _Button_Button_vue__WEBPACK_IMPORTED_MODULE_0__["default"],
  parameters: {
    docs: {
      description: {
        component: _Button_mdx__WEBPACK_IMPORTED_MODULE_1__["default"]
      }
    }
  },
  argTypes: {
    variant: {
      control: 'select',
      options: ['primary', 'secondary', 'special', 'unboxed', 'inverse', 'disabled']
    },
    size: {
      control: 'select',
      options: ['xs', 'sm', 'md', 'lg', 'xl']
    },
    isBlock: {
      control: 'boolean'
    },
    isRound: {
      control: 'boolean'
    },
    isDisabled: {
      control: 'boolean'
    }
  }
});
var Template = function (args) {
  return {
    components: {
      Button: _Button_Button_vue__WEBPACK_IMPORTED_MODULE_0__["default"]
    },
    setup: function setup() {
      return {
        args: args
      };
    },
    template: '<Button v-bind="args">{{ args.label }}</Button>'
  };
};
var Primary = Template.bind({});
Primary.args = {
  variant: 'primary',
  size: 'md',
  isBlock: false,
  isRound: false,
  isDisabled: false,
  label: 'Primary Button'
};
var Secondary = Template.bind({});
Secondary.args = {
  variant: 'secondary',
  size: 'md',
  isBlock: false,
  isRound: false,
  isDisabled: false,
  label: 'Secondary Button'
};
var Special = Template.bind({});
Special.args = {
  variant: 'special',
  size: 'md',
  isBlock: false,
  isRound: false,
  isDisabled: false,
  label: 'Special Button'
};
var Unboxed = Template.bind({});
Unboxed.args = {
  variant: 'unboxed',
  size: 'md',
  isBlock: false,
  isRound: false,
  isDisabled: false,
  label: 'Unboxed Button'
};
var Inverse = Template.bind({});
Inverse.args = {
  variant: 'inverse',
  size: 'md',
  isBlock: false,
  isRound: false,
  isDisabled: false,
  label: 'Inverse Button'
};
var Disabled = Template.bind({});
Disabled.args = {
  variant: 'primary',
  size: 'md',
  isBlock: false,
  isRound: false,
  isDisabled: true,
  label: 'Disabled Button'
};
var Block = Template.bind({});
Block.args = {
  variant: 'primary',
  size: 'md',
  isBlock: true,
  isRound: false,
  isDisabled: false,
  label: 'Block Button'
};
var Rounded = Template.bind({});
Rounded.args = {
  variant: 'primary',
  size: 'md',
  isBlock: false,
  isRound: true,
  isDisabled: false,
  label: 'Rounded Button'
};
var ExtraSmall = Template.bind({});
ExtraSmall.args = {
  variant: 'primary',
  size: 'xs',
  isBlock: false,
  isRound: false,
  isDisabled: false,
  label: 'Extra Small Button'
};
var Small = Template.bind({});
Small.args = {
  variant: 'primary',
  size: 'sm',
  isBlock: false,
  isRound: false,
  isDisabled: false,
  label: 'Small Button'
};
var Medium = Template.bind({});
Medium.args = {
  variant: 'primary',
  size: 'md',
  isBlock: false,
  isRound: false,
  isDisabled: false,
  label: 'Medium Button'
};
var Large = Template.bind({});
Large.args = {
  variant: 'primary',
  size: 'lg',
  isBlock: false,
  isRound: false,
  isDisabled: false,
  label: 'Large Button'
};
var ExtraLarge = Template.bind({});
ExtraLarge.args = {
  variant: 'primary',
  size: 'xl',
  isBlock: false,
  isRound: false,
  isDisabled: false,
  label: 'Extra Large Button'
};
Primary.parameters = {
  ...Primary.parameters,
  docs: {
    ...Primary.parameters?.docs,
    source: {
      originalSource: "args => ({\n  components: {\n    Button\n  },\n  setup() {\n    return {\n      args\n    };\n  },\n  template: '<Button v-bind=\"args\">{{ args.label }}</Button>'\n})",
      ...Primary.parameters?.docs?.source
    }
  }
};
Secondary.parameters = {
  ...Secondary.parameters,
  docs: {
    ...Secondary.parameters?.docs,
    source: {
      originalSource: "args => ({\n  components: {\n    Button\n  },\n  setup() {\n    return {\n      args\n    };\n  },\n  template: '<Button v-bind=\"args\">{{ args.label }}</Button>'\n})",
      ...Secondary.parameters?.docs?.source
    }
  }
};
Special.parameters = {
  ...Special.parameters,
  docs: {
    ...Special.parameters?.docs,
    source: {
      originalSource: "args => ({\n  components: {\n    Button\n  },\n  setup() {\n    return {\n      args\n    };\n  },\n  template: '<Button v-bind=\"args\">{{ args.label }}</Button>'\n})",
      ...Special.parameters?.docs?.source
    }
  }
};
Unboxed.parameters = {
  ...Unboxed.parameters,
  docs: {
    ...Unboxed.parameters?.docs,
    source: {
      originalSource: "args => ({\n  components: {\n    Button\n  },\n  setup() {\n    return {\n      args\n    };\n  },\n  template: '<Button v-bind=\"args\">{{ args.label }}</Button>'\n})",
      ...Unboxed.parameters?.docs?.source
    }
  }
};
Inverse.parameters = {
  ...Inverse.parameters,
  docs: {
    ...Inverse.parameters?.docs,
    source: {
      originalSource: "args => ({\n  components: {\n    Button\n  },\n  setup() {\n    return {\n      args\n    };\n  },\n  template: '<Button v-bind=\"args\">{{ args.label }}</Button>'\n})",
      ...Inverse.parameters?.docs?.source
    }
  }
};
Disabled.parameters = {
  ...Disabled.parameters,
  docs: {
    ...Disabled.parameters?.docs,
    source: {
      originalSource: "args => ({\n  components: {\n    Button\n  },\n  setup() {\n    return {\n      args\n    };\n  },\n  template: '<Button v-bind=\"args\">{{ args.label }}</Button>'\n})",
      ...Disabled.parameters?.docs?.source
    }
  }
};
Block.parameters = {
  ...Block.parameters,
  docs: {
    ...Block.parameters?.docs,
    source: {
      originalSource: "args => ({\n  components: {\n    Button\n  },\n  setup() {\n    return {\n      args\n    };\n  },\n  template: '<Button v-bind=\"args\">{{ args.label }}</Button>'\n})",
      ...Block.parameters?.docs?.source
    }
  }
};
Rounded.parameters = {
  ...Rounded.parameters,
  docs: {
    ...Rounded.parameters?.docs,
    source: {
      originalSource: "args => ({\n  components: {\n    Button\n  },\n  setup() {\n    return {\n      args\n    };\n  },\n  template: '<Button v-bind=\"args\">{{ args.label }}</Button>'\n})",
      ...Rounded.parameters?.docs?.source
    }
  }
};
ExtraSmall.parameters = {
  ...ExtraSmall.parameters,
  docs: {
    ...ExtraSmall.parameters?.docs,
    source: {
      originalSource: "args => ({\n  components: {\n    Button\n  },\n  setup() {\n    return {\n      args\n    };\n  },\n  template: '<Button v-bind=\"args\">{{ args.label }}</Button>'\n})",
      ...ExtraSmall.parameters?.docs?.source
    }
  }
};
Small.parameters = {
  ...Small.parameters,
  docs: {
    ...Small.parameters?.docs,
    source: {
      originalSource: "args => ({\n  components: {\n    Button\n  },\n  setup() {\n    return {\n      args\n    };\n  },\n  template: '<Button v-bind=\"args\">{{ args.label }}</Button>'\n})",
      ...Small.parameters?.docs?.source
    }
  }
};
Medium.parameters = {
  ...Medium.parameters,
  docs: {
    ...Medium.parameters?.docs,
    source: {
      originalSource: "args => ({\n  components: {\n    Button\n  },\n  setup() {\n    return {\n      args\n    };\n  },\n  template: '<Button v-bind=\"args\">{{ args.label }}</Button>'\n})",
      ...Medium.parameters?.docs?.source
    }
  }
};
Large.parameters = {
  ...Large.parameters,
  docs: {
    ...Large.parameters?.docs,
    source: {
      originalSource: "args => ({\n  components: {\n    Button\n  },\n  setup() {\n    return {\n      args\n    };\n  },\n  template: '<Button v-bind=\"args\">{{ args.label }}</Button>'\n})",
      ...Large.parameters?.docs?.source
    }
  }
};
ExtraLarge.parameters = {
  ...ExtraLarge.parameters,
  docs: {
    ...ExtraLarge.parameters?.docs,
    source: {
      originalSource: "args => ({\n  components: {\n    Button\n  },\n  setup() {\n    return {\n      args\n    };\n  },\n  template: '<Button v-bind=\"args\">{{ args.label }}</Button>'\n})",
      ...ExtraLarge.parameters?.docs?.source
    }
  }
};;const __namedExportsOrder = ["Primary","Secondary","Special","Unboxed","Inverse","Disabled","Block","Rounded","ExtraSmall","Small","Medium","Large","ExtraLarge"];

/***/ })

});
//# sourceMappingURL=components-Button-Button-stories.2d6d3e90d4f771016222.hot-update.js.map
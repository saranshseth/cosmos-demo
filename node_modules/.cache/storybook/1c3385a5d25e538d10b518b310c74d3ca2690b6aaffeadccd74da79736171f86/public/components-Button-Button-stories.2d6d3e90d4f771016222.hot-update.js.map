{"version":3,"file":"components-Button-Button-stories.2d6d3e90d4f771016222.hot-update.js","mappingshsources":["webpack://tailwind-demo/./src/components/Button/Button.mdx","webpack://tailwind-demo/"],"sourcesContent":["\nimport React from 'react';\n\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/Users/saransh.seth/Desktop/Tailwind-Demo/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim\";\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    li: \"li\",\n    p: \"p\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"button-component\",\n      children: \"Button Component\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"Button\"\n      }), \" component is a flexible and customizable button component supporting various styles, sizes, and states. It is designed to be accessible and responsive.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"props\",\n      children: \"Props\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"variant\"\n        }), \" (String): Specifies the style variant of the button. Options are \", _jsx(_components.code, {\n          children: \"primary\"\n        }), \", \", _jsx(_components.code, {\n          children: \"secondary\"\n        }), \", \", _jsx(_components.code, {\n          children: \"special\"\n        }), \", \", _jsx(_components.code, {\n          children: \"unboxed\"\n        }), \", \", _jsx(_components.code, {\n          children: \"inverse\"\n        }), \", \", _jsx(_components.code, {\n          children: \"disabled\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"size\"\n        }), \" (String): Specifies the size of the button. Options are \", _jsx(_components.code, {\n          children: \"xs\"\n        }), \", \", _jsx(_components.code, {\n          children: \"sm\"\n        }), \", \", _jsx(_components.code, {\n          children: \"md\"\n        }), \", \", _jsx(_components.code, {\n          children: \"lg\"\n        }), \", \", _jsx(_components.code, {\n          children: \"xl\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"isBlock\"\n        }), \" (Boolean): If true, the button will be displayed as a block element (full width).\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"isRound\"\n        }), \" (Boolean): If true, the button will have fully rounded corners.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"isDisabled\"\n        }), \" (Boolean): If true, the button will be disabled.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"example-usage\",\n      children: \"Example Usage\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the \", _jsx(_components.code, {\n        children: \"Button\"\n      }), \" component to create interactive buttons in your application. You can customize the \", _jsx(_components.code, {\n        children: \"variant\"\n      }), \", \", _jsx(_components.code, {\n        children: \"size\"\n      }), \", \", _jsx(_components.code, {\n        children: \"isBlock\"\n      }), \", \", _jsx(_components.code, {\n        children: \"isRound\"\n      }), \", and \", _jsx(_components.code, {\n        children: \"isDisabled\"\n      }), \" properties to suit your needs.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"props-table\",\n      children: \"Props Table\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"| Prop Name   | Type    | Default  | Description                                                                 |\\n|-------------|---------|----------|-----------------------------------------------------------------------------|\\n| variant     | String  | primary  | Specifies the style variant of the button. Options are \", _jsx(_components.code, {\n        children: \"primary\"\n      }), \", \", _jsx(_components.code, {\n        children: \"secondary\"\n      }), \", \", _jsx(_components.code, {\n        children: \"special\"\n      }), \", \", _jsx(_components.code, {\n        children: \"unboxed\"\n      }), \", \", _jsx(_components.code, {\n        children: \"inverse\"\n      }), \", \", _jsx(_components.code, {\n        children: \"disabled\"\n      }), \". |\\n| size        | String  | md       | Specifies the size of the button. Options are \", _jsx(_components.code, {\n        children: \"xs\"\n      }), \", \", _jsx(_components.code, {\n        children: \"sm\"\n      }), \", \", _jsx(_components.code, {\n        children: \"md\"\n      }), \", \", _jsx(_components.code, {\n        children: \"lg\"\n      }), \", \", _jsx(_components.code, {\n        children: \"xl\"\n      }), \". |\\n| isBlock     | Boolean | false    | If true, the button will be displayed as a block element (full width).      |\\n| isRound     | Boolean | false    | If true, the button will have fully rounded corners.                        |\\n| isDisabled  | Boolean | false    | If true, the button will be disabled.                                       |\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"customization\",\n      children: \"Customization\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Styling\"\n        }), \": Customize the appearance using TailwindCSS utility classes.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Accessibility\"\n        }), \": The component includes keyboard navigation and ARIA attributes to enhance accessibility.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"variants\",\n      children: \"Variants\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"primary\",\n      children: \"Primary\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The primary variant provides a standard button with a primary color.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"secondary\",\n      children: \"Secondary\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The secondary variant provides a button with a secondary color and border.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"special\",\n      children: \"Special\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The special variant provides a button with a distinctive color to highlight special actions.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"unboxed\",\n      children: \"Unboxed\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The unboxed variant provides a transparent button without borders.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"inverse\",\n      children: \"Inverse\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The inverse variant provides a button with inverted colors, suitable for dark backgrounds.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"disabled\",\n      children: \"Disabled\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The disabled variant provides a non-interactive button.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"sizes\",\n      children: \"Sizes\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The button component supports multiple sizes: \", _jsx(_components.code, {\n        children: \"xs\"\n      }), \", \", _jsx(_components.code, {\n        children: \"sm\"\n      }), \", \", _jsx(_components.code, {\n        children: \"md\"\n      }), \", \", _jsx(_components.code, {\n        children: \"lg\"\n      }), \", \", _jsx(_components.code, {\n        children: \"xl\"\n      }), \".\"]\n    })]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n"],"names":[],"sourceRoot":""}
{"version":3,"file":"components-TextField-TextField-stories.72b2e8b0f45deba47de6.hot-update.js","mappings":";;;;;;;;;;;;;AAcA;;;;;;;;;;;;;AAaA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA9GA;AAAA;;;;;;;;;;;;;AAMA;;;;AACA;;;AALA;AAHA;AAAA;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA","sources":["webpack://tailwind-demo/./src/components/TextField/TextField.vue"],"sourcesContent":["<template>\n  <div :class=\"containerClasses\">\n    <div class=\"relative\">\n      <input :id=\"id\" :type=\"type\" :class=\"inputClasses\" :placeholder=\"isFocused || modelValue ? placeholder : ''\"\n        :disabled=\"isDisabled\" :value=\"modelValue\" @input=\"onInput\" @focus=\"onFocus\" @blur=\"onBlur\" ref=\"input\" />\n      <label :for=\"id\" :class=\"[labelClasses, { 'transform -translate-y-6 scale-75': isFocused || modelValue }]\">{{\n        label }}</label>\n    </div>\n    <p v-if=\"helperText\" class=\"text-sm text-grey-dark mt-1\">{{ helperText }}</p>\n    <p v-if=\"showError\" class=\"text-sm text-intrepid-red mt-1\">{{ errorText }}</p>\n  </div>\n</template>\n\n<script>\n/**\n * TextField component\n * @component\n * @prop {String} id - The id of the input field.\n * @prop {String} label - The label text for the input field.\n * @prop {String} type - The type of the input field. Options are `text`, `number`, `password`, `search`.\n * @prop {String} placeholder - The placeholder text for the input field.\n * @prop {Boolean} isDisabled - If true, the input field will be disabled.\n * @prop {String} helperText - Helper text displayed below the input field.\n * @prop {String} errorText - Error text displayed below the input field when validation fails.\n * @prop {Boolean} showError - If true, the error text will be displayed.\n * @prop {Boolean} isFullWidth - If true, the input field will take the full width of its container.\n * @prop {String} modelValue - The value of the input field.\n */\nexport default {\n  name: 'TextField',\n  props: {\n    id: {\n      type: String,\n      required: true\n    },\n    label: {\n      type: String,\n      required: true\n    },\n    type: {\n      type: String,\n      default: 'text'\n    },\n    placeholder: {\n      type: String,\n      default: ' '\n    },\n    isDisabled: {\n      type: Boolean,\n      default: false\n    },\n    helperText: {\n      type: String,\n      default: ''\n    },\n    errorText: {\n      type: String,\n      default: ''\n    },\n    showError: {\n      type: Boolean,\n      default: false\n    },\n    isFullWidth: {\n      type: Boolean,\n      default: false\n    },\n    modelValue: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      isFocused: false,\n    };\n  },\n  computed: {\n    containerClasses() {\n      return {\n        'w-full': this.isFullWidth,\n        'w-auto': !this.isFullWidth\n      };\n    },\n    labelClasses() {\n      return [\n        'absolute left-0 top-1/2 transform -translate-y-1 text-gray-500 transition-all duration-200 ease-in-out pointer-events-none',\n        'peer-placeholder-shown:text-base peer-placeholder-shown:top-1/2 peer-focus:top-0 peer-focus:-translate-y-6 peer-focus:scale-75'\n      ];\n    },\n    inputClasses() {\n      return [\n        'mt-1 block w-full border-b-2 border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-0 peer',\n        this.isDisabled ? 'bg-gray-200 cursor-not-allowed' : 'bg-white',\n        this.showError ? 'border-red-500 text-red-600' : 'border-gray-300 text-black',\n        'rounded-t-md px-3 py-2 focus:outline-none',\n      ];\n    }\n  },\n  methods: {\n    onInput(event) {\n      this.$emit('update:modelValue', event.target.value);\n      this.$emit('input', event);\n    },\n    onFocus() {\n      this.isFocused = true;\n    },\n    onBlur(event) {\n      this.isFocused = false;\n      this.$emit('blur', event);\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Custom styles for the focus state and label alignment */\n.focus\\:ring-0:focus {\n  outline: none;\n  box-shadow: none;\n}\n</style>\n"],"names":[],"sourceRoot":""}
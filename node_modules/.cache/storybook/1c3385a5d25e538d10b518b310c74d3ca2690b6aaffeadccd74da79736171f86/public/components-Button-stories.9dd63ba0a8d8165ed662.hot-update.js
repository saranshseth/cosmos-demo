"use strict";
self["webpackHotUpdatetailwind_demo"]("components-Button-stories",{

/***/ "./src/components/Button.stories.js":
/*!******************************************!*\
  !*** ./src/components/Button.stories.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Block: () => (/* binding */ Block),
/* harmony export */   Disabled: () => (/* binding */ Disabled),
/* harmony export */   ExtraLarge: () => (/* binding */ ExtraLarge),
/* harmony export */   ExtraSmall: () => (/* binding */ ExtraSmall),
/* harmony export */   InversePrimary: () => (/* binding */ InversePrimary),
/* harmony export */   InverseSecondary: () => (/* binding */ InverseSecondary),
/* harmony export */   Large: () => (/* binding */ Large),
/* harmony export */   Medium: () => (/* binding */ Medium),
/* harmony export */   Primary: () => (/* binding */ Primary),
/* harmony export */   Rounded: () => (/* binding */ Rounded),
/* harmony export */   Secondary: () => (/* binding */ Secondary),
/* harmony export */   Small: () => (/* binding */ Small),
/* harmony export */   Special: () => (/* binding */ Special),
/* harmony export */   Unboxed: () => (/* binding */ Unboxed),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _components_Button_vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/Button.vue */ "./src/components/Button.vue");

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  title: 'Components/Button',
  component: _components_Button_vue__WEBPACK_IMPORTED_MODULE_0__["default"],
  tags: ['autodocs'],
  argTypes: {
    variant: {
      control: 'select',
      options: ['primary', 'secondary', 'special', 'unboxed', 'inverse-primary', 'inverse-secondary', 'disabled']
    },
    size: {
      control: 'select',
      options: ['xs', 'sm', 'md', 'lg', 'xl']
    },
    isBlock: {
      control: 'boolean'
    },
    isRound: {
      control: 'boolean'
    },
    isDisabled: {
      control: 'boolean'
    },
    label: {
      control: 'text'
    }
  }
});
var Template = function (args) {
  return {
    components: {
      Button: _components_Button_vue__WEBPACK_IMPORTED_MODULE_0__["default"]
    },
    setup: function setup() {
      return {
        args: args
      };
    },
    template: '<Button v-bind="args">{{ args.label }}</Button>'
  };
};
// Primary Button
var Primary = Template.bind({});
Primary.args = {
  variant: 'primary',
  label: 'Primary Button'
};
// Secondary Button
var Secondary = Template.bind({});
Secondary.args = {
  variant: 'secondary',
  label: 'Secondary Button'
};
// Special Button
var Special = Template.bind({});
Special.args = {
  variant: 'special',
  label: 'Special Button'
};
// Unboxed Button
var Unboxed = Template.bind({});
Unboxed.args = {
  variant: 'unboxed',
  label: 'Unboxed Button'
};
// Inverse Primary Button
var InversePrimary = Template.bind({});
InversePrimary.args = {
  variant: 'inverse-primary',
  label: 'Inverse Primary Button'
};
InversePrimary.decorators = [function () {
  return {
    template: '<div class="bg-grey-light h-30 p-5"><story /></div>'
  };
}];
// Inverse Secondary Button
var InverseSecondary = Template.bind({});
InverseSecondary.args = {
  variant: 'inverse-secondary',
  label: 'Inverse Secondary Button'
};
InverseSecondary.decorators = [function () {
  return {
    template: '<div class="bg-grey-light h-30 p-5"><story /></div>'
  };
}];
// Disabled Button
var Disabled = Template.bind({});
Disabled.args = {
  variant: 'primary',
  isDisabled: true,
  label: 'Disabled Button'
};
// Rounded Button
var Rounded = Template.bind({});
Rounded.args = {
  variant: 'primary',
  isRound: true,
  label: 'Rounded Button'
};
// Block Button
var Block = Template.bind({});
Block.args = {
  variant: 'primary',
  isBlock: true,
  label: 'Block Button'
};
// All Size Variants
var ExtraSmall = Template.bind({});
ExtraSmall.args = {
  variant: 'primary',
  size: 'xs',
  label: 'Extra Small Button'
};
var Small = Template.bind({});
Small.args = {
  variant: 'primary',
  size: 'sm',
  label: 'Small Button'
};
var Medium = Template.bind({});
Medium.args = {
  variant: 'primary',
  size: 'md',
  label: 'Medium Button'
};
var Large = Template.bind({});
Large.args = {
  variant: 'primary',
  size: 'lg',
  label: 'Large Button'
};
var ExtraLarge = Template.bind({});
ExtraLarge.args = {
  variant: 'primary',
  size: 'xl',
  label: 'Extra Large Button'
};
Primary.parameters = {
  ...Primary.parameters,
  docs: {
    ...Primary.parameters?.docs,
    source: {
      originalSource: "args => ({\n  components: {\n    Button\n  },\n  setup() {\n    return {\n      args\n    };\n  },\n  template: '<Button v-bind=\"args\">{{ args.label }}</Button>' // Bind label to the slot\n})",
      ...Primary.parameters?.docs?.source
    }
  }
};
Secondary.parameters = {
  ...Secondary.parameters,
  docs: {
    ...Secondary.parameters?.docs,
    source: {
      originalSource: "args => ({\n  components: {\n    Button\n  },\n  setup() {\n    return {\n      args\n    };\n  },\n  template: '<Button v-bind=\"args\">{{ args.label }}</Button>' // Bind label to the slot\n})",
      ...Secondary.parameters?.docs?.source
    }
  }
};
Special.parameters = {
  ...Special.parameters,
  docs: {
    ...Special.parameters?.docs,
    source: {
      originalSource: "args => ({\n  components: {\n    Button\n  },\n  setup() {\n    return {\n      args\n    };\n  },\n  template: '<Button v-bind=\"args\">{{ args.label }}</Button>' // Bind label to the slot\n})",
      ...Special.parameters?.docs?.source
    }
  }
};
Unboxed.parameters = {
  ...Unboxed.parameters,
  docs: {
    ...Unboxed.parameters?.docs,
    source: {
      originalSource: "args => ({\n  components: {\n    Button\n  },\n  setup() {\n    return {\n      args\n    };\n  },\n  template: '<Button v-bind=\"args\">{{ args.label }}</Button>' // Bind label to the slot\n})",
      ...Unboxed.parameters?.docs?.source
    }
  }
};
InversePrimary.parameters = {
  ...InversePrimary.parameters,
  docs: {
    ...InversePrimary.parameters?.docs,
    source: {
      originalSource: "args => ({\n  components: {\n    Button\n  },\n  setup() {\n    return {\n      args\n    };\n  },\n  template: '<Button v-bind=\"args\">{{ args.label }}</Button>' // Bind label to the slot\n})",
      ...InversePrimary.parameters?.docs?.source
    }
  }
};
InverseSecondary.parameters = {
  ...InverseSecondary.parameters,
  docs: {
    ...InverseSecondary.parameters?.docs,
    source: {
      originalSource: "args => ({\n  components: {\n    Button\n  },\n  setup() {\n    return {\n      args\n    };\n  },\n  template: '<Button v-bind=\"args\">{{ args.label }}</Button>' // Bind label to the slot\n})",
      ...InverseSecondary.parameters?.docs?.source
    }
  }
};
Disabled.parameters = {
  ...Disabled.parameters,
  docs: {
    ...Disabled.parameters?.docs,
    source: {
      originalSource: "args => ({\n  components: {\n    Button\n  },\n  setup() {\n    return {\n      args\n    };\n  },\n  template: '<Button v-bind=\"args\">{{ args.label }}</Button>' // Bind label to the slot\n})",
      ...Disabled.parameters?.docs?.source
    }
  }
};
Rounded.parameters = {
  ...Rounded.parameters,
  docs: {
    ...Rounded.parameters?.docs,
    source: {
      originalSource: "args => ({\n  components: {\n    Button\n  },\n  setup() {\n    return {\n      args\n    };\n  },\n  template: '<Button v-bind=\"args\">{{ args.label }}</Button>' // Bind label to the slot\n})",
      ...Rounded.parameters?.docs?.source
    }
  }
};
Block.parameters = {
  ...Block.parameters,
  docs: {
    ...Block.parameters?.docs,
    source: {
      originalSource: "args => ({\n  components: {\n    Button\n  },\n  setup() {\n    return {\n      args\n    };\n  },\n  template: '<Button v-bind=\"args\">{{ args.label }}</Button>' // Bind label to the slot\n})",
      ...Block.parameters?.docs?.source
    }
  }
};
ExtraSmall.parameters = {
  ...ExtraSmall.parameters,
  docs: {
    ...ExtraSmall.parameters?.docs,
    source: {
      originalSource: "args => ({\n  components: {\n    Button\n  },\n  setup() {\n    return {\n      args\n    };\n  },\n  template: '<Button v-bind=\"args\">{{ args.label }}</Button>' // Bind label to the slot\n})",
      ...ExtraSmall.parameters?.docs?.source
    }
  }
};
Small.parameters = {
  ...Small.parameters,
  docs: {
    ...Small.parameters?.docs,
    source: {
      originalSource: "args => ({\n  components: {\n    Button\n  },\n  setup() {\n    return {\n      args\n    };\n  },\n  template: '<Button v-bind=\"args\">{{ args.label }}</Button>' // Bind label to the slot\n})",
      ...Small.parameters?.docs?.source
    }
  }
};
Medium.parameters = {
  ...Medium.parameters,
  docs: {
    ...Medium.parameters?.docs,
    source: {
      originalSource: "args => ({\n  components: {\n    Button\n  },\n  setup() {\n    return {\n      args\n    };\n  },\n  template: '<Button v-bind=\"args\">{{ args.label }}</Button>' // Bind label to the slot\n})",
      ...Medium.parameters?.docs?.source
    }
  }
};
Large.parameters = {
  ...Large.parameters,
  docs: {
    ...Large.parameters?.docs,
    source: {
      originalSource: "args => ({\n  components: {\n    Button\n  },\n  setup() {\n    return {\n      args\n    };\n  },\n  template: '<Button v-bind=\"args\">{{ args.label }}</Button>' // Bind label to the slot\n})",
      ...Large.parameters?.docs?.source
    }
  }
};
ExtraLarge.parameters = {
  ...ExtraLarge.parameters,
  docs: {
    ...ExtraLarge.parameters?.docs,
    source: {
      originalSource: "args => ({\n  components: {\n    Button\n  },\n  setup() {\n    return {\n      args\n    };\n  },\n  template: '<Button v-bind=\"args\">{{ args.label }}</Button>' // Bind label to the slot\n})",
      ...ExtraLarge.parameters?.docs?.source
    }
  }
};;const __namedExportsOrder = ["Primary","Secondary","Special","Unboxed","InversePrimary","InverseSecondary","Disabled","Rounded","Block","ExtraSmall","Small","Medium","Large","ExtraLarge"];

/***/ })

});
//# sourceMappingURL=components-Button-stories.9dd63ba0a8d8165ed662.hot-update.js.map
{"version":3,"file":"components-Accordion-Accordion-stories.b65d1cc37429142bfb1c.hot-update.js","mappings":";;;;;;;;;;;;;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAjGA;AAAA;;AACA;AAAA;;;;;;AASA;;;AARA;AAHA;AAAA;;AACA;AACA;AACA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;;AACA;AAAA;AAAA;AACA;AAAA;AAAA;;AAEA;AACA;AAAA;AAAA","sources":["webpack://tailwind-demo/./src/components/Accordion/Accordion.vue"],"sourcesContent":["<template>\n  <div :class=\"accordionClasses\">\n    <div class=\"accordion-controls flex justify-between items-center p-4 border-b border-grey-light\">\n      <h2 class=\"text-xl font-semibold\">{{ title }}</h2>\n      <button @click=\"toggleAll\" class=\"text-sm font-medium\">{{ allOpen ? 'Hide all' : 'Show all' }}</button>\n    </div>\n    <div v-for=\"(item, index) in items\" :key=\"index\" :class=\"itemClasses\">\n      <div @click=\"toggle(index)\"\n        class=\"accordion-header flex justify-between items-center cursor-pointer p-4 border-b border-grey-light\">\n        <h3 :class=\"headerClasses\">{{ item.title }}</h3>\n        <span :class=\"chevronClasses\">{{ isOpen(index) ? '▲' : '▼' }}</span>\n      </div>\n      <div v-if=\"isOpen(index)\" class=\"accordion-content p-4 px-6  border-b border-grey-light\">\n        <slot :name=\"`content-${index}`\">{{ item.content }}</slot>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Accordion',\n  props: {\n    items: {\n      type: Array,\n      required: true,\n    },\n    variant: {\n      type: String,\n      default: 'default', // default, bordered, highlighted, collapsible\n    },\n    title: {\n      type: String,\n      default: 'Accordion',\n    },\n  },\n  data() {\n    return {\n      openIndex: [],\n      allOpen: false,\n    };\n  },\n  computed: {\n    accordionClasses() {\n      return [\n        'accordion',\n        this.variantClasses,\n      ];\n    },\n    itemClasses() {\n      return [\n        'accordion-item',\n        'transition-all',\n        'duration-300',\n        'ease-in-out',\n      ];\n    },\n    headerClasses() {\n      return [\n        'accordion-header',\n        'font-semibold',\n      ];\n    },\n    chevronClasses() {\n      return [\n        'accordion-chevron',\n        'text-xl',\n        'transition-transform',\n      ];\n    },\n    variantClasses() {\n      return {\n        default: '',\n        bordered: 'border border-grey-light',\n        highlighted: 'bg-grey-lighter text-midnight',\n        collapsible: 'bg-white text-midnight',\n      }[this.variant] || '';\n    },\n  },\n  methods: {\n    toggle(index) {\n      if (this.openIndex.includes(index)) {\n        this.openIndex = this.openIndex.filter(i => i !== index);\n      } else {\n        this.openIndex.push(index);\n      }\n    },\n    isOpen(index) {\n      return this.openIndex.includes(index);\n    },\n    toggleAll() {\n      if (this.allOpen) {\n        this.openIndex = [];\n      } else {\n        this.openIndex = this.items.map((_, index) => index);\n      }\n      this.allOpen = !this.allOpen;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.accordion-item:hover {\n  @apply bg-grey-lighter-alpha;\n}\n</style>\n"],"names":[],"sourceRoot":""}